apiVersion: v1
kind: Template
labels:
  app: redhat-issue-mongodb
metadata:
  annotations:
    description: Issue CRUD service persistent template for MongoDB
  name: redhat-issue-mongodb
objects:
# issue Service
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: issue-mongodb
    name: issue-mongodb
  spec:
    ports:
    - name: mongo
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      deploymentconfig: issue-mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: issue-mongodb
    name: issue-mongodb
  spec:
    replicas: 1
    selector:
      deploymentconfig: issue-mongodb
    strategy:
      recreateParams:
        post:
          execNewPod:
            command:
              - /bin/sh
              - -i
              - -c
              - sleep 10 && /opt/rh/rh-mongodb32/root/usr/bin/mongo $ISSUE_MONGODB_SERVICE_HOST:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="$MONGODB_INIT"
            containerName: issue-mongodb
            env:
            - name: MONGODB_INIT
              value: db.IssueCollection.insert({"id":"10","title":"Red Fedora","description":"Official Red Hat Fedora","email":"samplej@emplo.com","project":"12ui3oi1","createdAt":"", "estado":"0"});
                     db.IssueCollection.insert({"id":"11","title":"Red Fedora","description":"Official Red Hat Fedora","email":"samplej@emplo.com","project":"12ui3oi1","createdAt":"", "estado":"0"});
          failurePolicy: ignore
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: issue-mongodb
          deploymentconfig: issue-mongodb
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MONGODB_USER
            value: ${ISSUE_DB_USERNAME}
          - name: MONGODB_PASSWORD
            value: ${ISSUE_DB_PASSWORD}
          - name: MONGODB_DATABASE
            value: ${ISSUE_DATABASE}
          - name: MONGODB_ADMIN_PASSWORD
            value: ${ISSUE_DB_PASSWORD}
          image: mongodb
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: issue-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 10
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-data-pv
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - issue-mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      application: issue-mongodb
    name: mongodb-data-pv
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
parameters:
- description: issue Service database user name
  from: issue[a-zA-Z0-9]{3}
  generate: expression
  name: ISSUE_DB_USERNAME
  required: true
- description: issue Service database user password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: ISSUE_DB_PASSWORD
  required: true
- description: issue Service database name
  name: ISSUE_DATABASE
  required: true
  value: issuedb

